import java.io.*;
import java.util.*;

class Employee {
    int id;
    String name;
    double salary;

    public Employee(int id, String name, double salary) {
        this.id = id;
        this.name = name;
        this.salary = salary;
    }

    @Override
    public String toString() {
        return id + "," + name + "," + salary;
    }

    public static Employee fromString(String line) {
        String[] parts = line.split(",");
        return new Employee(Integer.parseInt(parts[0]), parts[1], Double.parseDouble(parts[2]));
    }
}

public class EmployeeCRUD {
    static final String FILE = "employees.txt";

    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        while (true) {
            System.out.println("\n1. Create 2. Read 3. Update 4. Delete 5. Exit");
            int choice = sc.nextInt();
            switch (choice) {
                case 1 -> create(sc);
                case 2 -> read();
                case 3 -> update(sc);
                case 4 -> delete(sc);
                case 5 -> System.exit(0);
                default -> System.out.println("Invalid choice!");
            }
        }
    }

    static void create(Scanner sc) throws IOException {
        System.out.print("Enter ID: ");
        int id = sc.nextInt();
        sc.nextLine();
        System.out.print("Enter Name: ");
        String name = sc.nextLine();
        System.out.print("Enter Salary: ");
        double salary = sc.nextDouble();
        Employee emp = new Employee(id, name, salary);

        try (BufferedWriter bw = new BufferedWriter(new FileWriter(FILE, true))) {
            bw.write(emp.toString());
            bw.newLine();
        }
        System.out.println("Employee added.");
    }

    static void read() throws IOException {
        try (BufferedReader br = new BufferedReader(new FileReader(FILE))) {
            String line;
            while ((line = br.readLine()) != null) {
                Employee emp = Employee.fromString(line);
                System.out.println(emp.id + " " + emp.name + " " + emp.salary);
            }
        }
    }

    static void update(Scanner sc) throws IOException {
        System.out.print("Enter ID to update: ");
        int id = sc.nextInt();
        sc.nextLine();
        System.out.print("Enter new Name: ");
        String name = sc.nextLine();
        System.out.print("Enter new Salary: ");
        double salary = sc.nextDouble();

        List<Employee> list = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader(FILE))) {
            String line;
            while ((line = br.readLine()) != null) {
                Employee emp = Employee.fromString(line);
                if (emp.id == id) emp = new Employee(id, name, salary);
                list.add(emp);
            }
        }

        try (BufferedWriter bw = new BufferedWriter(new FileWriter(FILE))) {
            for (Employee emp : list) {
                bw.write(emp.toString());
                bw.newLine();
            }
        }
        System.out.println("Employee updated.");
    }

    static void delete(Scanner sc) throws IOException {
        System.out.print("Enter ID to delete: ");
        int id = sc.nextInt();

        List<Employee> list = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader(FILE))) {
            String line;
            while ((line = br.readLine()) != null) {
                Employee emp = Employee.fromString(line);
                if (emp.id != id) list.add(emp);
            }
        }

        try (BufferedWriter bw = new BufferedWriter(new FileWriter(FILE))) {
            for (Employee emp : list) {
                bw.write(emp.toString());
                bw.newLine();
            }
        }
        System.out.println("Employee deleted.");
    }
}
